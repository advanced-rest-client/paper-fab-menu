/**
 * DO NOT EDIT
 *
 * This file was automatically generated by
 *   https://github.com/Polymer/tools/tree/master/packages/gen-typescript-declarations
 *
 * To modify these typings, edit the source file(s):
 *   paper-fab-menu.js
 */


// tslint:disable:variable-name Describing an API that's defined elsewhere.
// tslint:disable:no-any describes the API as best we are able today

import {LitElement, html, css} from 'lit-element';

declare namespace UiElements {

  /**
   * Material design:
   * [Floating Action Button](https://www.google.com/design/spec/components/buttons-floating-action-button.html)
   *
   * A floating action button represents the primary action in an application.
   *
   * Use the `<paper-fab-menu>` to display menu-like fab buttons and to promote actions.
   *
   * ### Example
   *
   * ```html
   * <paper-fab-menu color="teal" icon="add">
   *  <paper-fab mini icon="star"></paper-fab-menu-item>
   *  <paper-fab mini icon="star"></paper-fab-menu-item>
   *  <paper-fab mini icon="star"></paper-fab-menu-item>
   * </paper-fab-menu>
   * ```
   *
   * ### Styling
   * Style the menu using `<paper-fab>` variables.
   *
   * The element uses `--paper-fab-menu-background-color` variable to set a
   * background color or the main `<paper-fab>` element.
   */
  class PaperFabMenu extends LitElement {

    /**
     * True when the menu is opened.
     */
    opened: boolean|null|undefined;

    /**
     * The icon to render. It's binded to `paper-fab`'s icon property.
     */
    icon: string|null|undefined;

    /**
     * If true then the children container is displayed.
     */
    childrenVisible: boolean|null|undefined;
    constructor();
    connectedCallback(): void;
    disconnectedCallback(): void;
    firstUpdated(): void;
    render(): any;
    _childrenUpdated(mutations: any): void;
    _setChanged(prop: any, value: any): any;

    /**
     * Toogles the menu
     */
    toggle(): void;

    /**
     * Tests if the menu should be opened and opens it if nescesary.
     */
    _testOpen(): void;

    /**
     * Tests if the menu should be closed and closes it if nescesary
     */
    _testClose(): void;

    /**
     * Renders the mennu opened / closed
     *
     * @param opened Current menu state
     */
    _openedChanged(opened: Boolean|null): void;
    _openedTimeout(children: any, opened: any): void;

    /**
     * Updates animation delay time attribute in distributed children.
     *
     * @returns Time of the latest delay set on the children animations.
     */
    _updateDelay(children: Array<Element|null>|null, opened: Boolean|null): Number|null;

    /**
     * Closes menu when click is detected outside this control.
     */
    _detectClick(e: MouseEvent|null): void;

    /**
     * MutationObserver initialized in the constructor does not
     * triggers changes when the element is initialized. This
     * function processes nodes set up declaratively when the element is still
     * initializing.
     */
    _processInitialNodes(): void;

    /**
     * Adds `role` and `aria-hidden` attribbutes to passed nodes.
     *
     * @param nodes List of nodes to process.
     */
    _nodesAddedHandler(nodes: Array<Node|null>|null): void;
  }
}

declare global {

  interface HTMLElementTagNameMap {
    "paper-fab-menu": UiElements.PaperFabMenu;
  }
}
